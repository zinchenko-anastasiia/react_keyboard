{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","buttonClick","event","key","setState","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,IAFhB,EAaEC,YAAc,SAACC,GACTA,EAAMC,KACR,EAAKC,SAAS,CAAEJ,WAAYE,EAAMC,OAfxC,uDAKE,WACEE,SAASC,iBAAiB,QAASC,KAAKN,eAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAV/C,oBAmBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SAEIT,EACI,mBAAGS,UAAU,eAAb,4CAAyDT,EAAzD,OACA,mBAAGS,UAAU,eAAb,2CA3Bd,GAAyBC,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.73483f90.chunk.js","sourcesContent":["import { Component, ReactNode } from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.buttonClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.buttonClick);\n  }\n\n  buttonClick = (event: KeyboardEvent) => {\n    if (event.key) {\n      this.setState({ pressedKey: event.key });\n    }\n  };\n\n  render(): ReactNode {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        {\n          pressedKey\n            ? <p className=\"App__message\">{`The last pressed key is [${pressedKey}]`}</p>\n            : <p className=\"App__message\">Nothing was pressed yet</p>\n        }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}